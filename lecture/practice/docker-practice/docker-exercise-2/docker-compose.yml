version: '3.8'

services:
  db:
    container_name: "test_db"
    image: mysql
    restart: always
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - "3307:3306"
    # setting some env vars to create the DB
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: "secret"
      MYSQL_DATABASE: "test"
      MYSQL_USER: "tester"
      MYSQL_PASSWORD: "secret"
      # OR if you want to use "root" as the user, just these two lines
      #MYSQL_PASSWORD: "password"
      #MYSQL_DATABASE: "testdb"

    # we mount a data volume to make sure we don't lose data
    volumes:
      - mysql_data:/var/lib/mysql
  api:
    container_name:  "test_api"
    # we want to use the image which is build from our Dockerfile
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    # we are depending on the mysql backend
    depends_on:
      - db
    # We mount the working dir into the container, handy for development
    # This is what makes the hot reloading work inside of a Docker container
    environment:
      mysql_host: "test_db"
    links:
      - db
    restart: on-failure

volumes:
  mysql_data: